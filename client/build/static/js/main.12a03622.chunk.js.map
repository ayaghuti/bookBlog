{"version":3,"sources":["actions/types.js","reducers/postReducer.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","actions/errorActions.js","actions/authActions.js","components/navbar/AppNavbar.js","actions/postActions.js","components/posts/PostDetails.js","components/posts/PostList.js","components/dashboard/Jumbotron.js","components/dashboard/Dashboard.js","components/auth/SignIn.js","components/auth/SignUp.js","components/posts/CreatePost.js","components/posts/UpdatePost.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE_POST","LIKE","POSTS_LOADING","MOUNT_UPDATE","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","SIGNUP_SUCCESS","SIGNUP_FAIL","GET_ERRORS","CLEAR_ERRORS","initState","posts","toBeEdited","loading","token","localStorage","getItem","isAuthenticated","isLoading","user","message","status","id","combineReducers","post","state","action","type","payload","map","_id","filter","auth","setItem","console","log","removeItem","error","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","returnErrors","clearErrors","tokenConfig","getState","config","headers","AppNavbar","dispatch","useDispatch","useSelector","useState","isOpen","setIsOpen","authLinks","NavItem","className","name","NavLink","href","onClick","guestLinks","Navbar","color","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","setPostsLoading","PostDetails","history","useHistory","title","author","creator","setError","handleLikePost","e","preventDefault","setTimeout","push","axios","patch","then","res","data","catch","response","likePost","handleEditPost","mountUpdate","handleDeletePost","delete","deletePost","Alert","Card","CardHeader","moment","date","fromNow","CardBody","CardTitle","tag","CardSubtitle","CardText","CardFooter","ButtonGroup","Badge","likes","length","PostList","this","props","getPosts","Component","connect","get","JumbotronC","Jumbotron","Dashboard","SignIn","modal","email","password","toggle","setState","handleSubmit","signInUser","handleChange","target","value","prevProps","to","Modal","ModalHeader","ModalBody","Form","autoComplete","onSubmit","FormGroup","Label","for","Input","placeholder","onChange","Button","block","body","JSON","stringify","SignUp","newUser","signUpUser","CreatePost","newPost","createPost","UpdatePost","oldPost","setNewPost","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uQAAaA,EAAY,YACZC,EAAS,SACTC,EAAS,SACTC,EAAc,cACdC,EAAO,OACPC,EAAgB,gBAChBC,EAAe,eAEfC,EAAe,eACfC,EAAc,cACdC,EAAa,aACbC,EAAgB,gBAChBC,EAAa,aACbC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAc,cAEdC,EAAa,aACbC,EAAe,eCRtBC,EAAY,CAChBC,MAAO,GACPC,WAAY,KACZC,SAAS,GCFLH,EAAY,CAChBI,MAAOC,aAAaC,QAAQ,SAC5BC,iBAAiB,EACjBC,WAAW,EACXC,KAAM,MCbFT,EAAY,CAChBU,QAAS,GACTC,OAAQ,KACRC,GAAI,MCASC,cAAgB,CAC7BC,KHUyB,WAAgC,IAA/BC,EAA8B,uDAAtBf,EAAWgB,EAAW,uCACxD,OAAOA,EAAOC,MACZ,KAAKlC,EACH,OAAO,2BACFgC,GADL,IAEEd,MAAOe,EAAOE,QACdf,SAAS,IAEb,KAAKnB,EACH,kCACK+B,GADL,IAEEd,MAAM,GAAD,mBAAMc,EAAMd,OAAZ,CAAmBe,EAAOE,UAC/Bf,SAAS,IAEb,KAAKhB,EACL,KAAKF,EACH,OAAO,2BACF8B,GADL,IAEEd,MAAOc,EAAMd,MAAMkB,KAAI,SAAAL,GAAI,OAAIA,EAAKM,MAAQJ,EAAOE,QAAQE,IAAMJ,EAAOE,QAAUJ,KAClFZ,WAAY,OAEhB,KAAKhB,EACH,OAAO,2BACF6B,GADL,IAEEd,MAAQc,EAAMd,MAAMoB,QAAO,SAAAP,GAAI,OAAIA,EAAKM,MAAQJ,EAAOE,aAE3D,KAAK9B,EACH,OAAO,2BACF2B,GADL,IAEEZ,SAAS,IAEX,KAAKd,EAEH,OAAO,2BACF0B,GADL,IAEEb,WAAYc,EAAOE,UAEzB,QACE,OAAOH,IG/CXO,KFWyB,WAAgC,IAA/BP,EAA8B,uDAAtBf,EAAWgB,EAAW,uCACxD,OAAOA,EAAOC,MACZ,KAAK3B,EACH,OAAO,2BACFyB,GADL,IAEEP,WAAW,IAEf,KAAKjB,EACH,OAAO,2BACFwB,GADL,IAEER,iBAAiB,EACjBC,WAAW,EACXC,KAAMO,EAAOE,UAEjB,KAAKzB,EACL,KAAKG,EAGH,OAFAS,aAAakB,QAAQ,QAASP,EAAOE,QAAQd,OAC7CoB,QAAQC,IAAI,iBACL,uCACFV,GACAC,EAAOE,SAFZ,IAGEX,iBAAiB,EACjBC,WAAW,IAEf,KAAKb,EACL,KAAKD,EACL,KAAKG,EACL,KAAKL,EAEH,OADAa,aAAaqB,WAAW,SACjB,2BACFX,GADL,IAEEX,MAAO,KACPK,KAAM,KACNF,iBAAiB,EACjBC,WAAW,IAEf,QACE,OAAOO,IE/CXY,MDA0B,WAAgC,IAA/BZ,EAA8B,uDAAtBf,EAAWgB,EAAW,uCACzD,OAAOA,EAAOC,MACZ,KAAKnB,EACH,MAAO,CACLY,QAASM,EAAOE,QAAQR,QACxBC,OAAQK,EAAOE,QAAQP,OACvBC,GAAII,EAAOE,QAAQN,IAEvB,KAAKb,EACH,MAAO,CACLW,QAAS,GACTC,OAAQ,KACRC,GAAI,MAER,QACE,OAAOG,MEjBPa,EAAa,CAACC,KAOLC,EALDC,YAAYC,EAJR,GAIgCC,YAChDC,IAAe,WAAf,EAAmBN,GACnBO,OAAOC,8BAAgCD,OAAOC,iC,0FCNnCC,EAAe,SAAC3B,EAASC,GAAuB,IAAfC,EAAc,uDAAT,KAI/C,MAAO,CACLK,KAAMnB,EACNoB,QAAS,CAAER,UAASC,SAAQC,QAKrB0B,EAAc,WACzB,MAAO,CACLrB,KAAMlB,IC8EGwC,GAAc,SAAAC,GAEzB,IAAMpC,EAAQoC,IAAWlB,KAAKlB,MAExBqC,EAAS,CACbC,QAAS,CACP,eAAgB,qBAOpB,OAHGtC,IACDqC,EAAOC,QAAQ,gBAAkBtC,GAE5BqC,GCjCME,GA7DG,WAChB,IAAMC,EAAWC,cACXvB,EAAOwB,aAAY,SAAA/B,GAAK,OAAIA,EAAMO,QAFlB,EAGMyB,oBAAS,GAHf,mBAGfC,EAHe,KAGPC,EAHO,KAiBhBC,EACJ,qCACE,cAACC,EAAA,EAAD,UACE,sBAAMC,UAAU,mBAAhB,SACE,iCAAU9B,EAAKb,KAAL,kBAAuBa,EAAKb,KAAK4C,MAAS,SAGxD,cAACF,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAASC,KAAK,IAAIC,QAZT,WACbZ,GD4DFpB,QAAQC,IAAI,mBACL,CACLR,KAAMtB,MCnDF,sBAEF,cAACwD,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAASC,KAAK,UAAd,2BAIAE,EACJ,qCACE,cAACN,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAASC,KAAK,UAAd,uBAEF,cAACJ,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,CAASC,KAAK,UAAd,0BAIJ,OACE,8BACE,cAACG,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,KAAjC,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAaR,KAAK,IAAlB,sBACA,cAACS,EAAA,EAAD,CAAeR,QA3CV,kBAAMP,GAAWD,MA4CtB,cAACiB,EAAA,EAAD,CAAUjB,OAAQA,EAAQkB,QAAM,EAAhC,SACE,cAACC,EAAA,EAAD,CAAKf,UAAU,UAAUc,QAAM,EAA/B,SACI5C,EAAKf,gBAAkB2C,EAAYO,cCkBxCW,GAAkB,WAC7B,MAAO,CACLnD,KAAM7B,I,wHCKKiF,GAjFK,SAAC,GAAY,IAAXvD,EAAU,EAAVA,KACdQ,EAAOwB,aAAa,SAAA/B,GAAK,OAAIA,EAAMO,QACnCgD,EAAUC,cACV3B,EAAWC,cACT2B,EAAoC1D,EAApC0D,MAAOC,EAA6B3D,EAA7B2D,OAAQ/D,EAAqBI,EAArBJ,QAASgE,EAAY5D,EAAZ4D,QAJF,EAKJ3B,mBAAS,MALL,mBAKvBpB,EALuB,KAKhBgD,EALgB,KAOxBC,EAAiB,SAACC,EAAGjE,GAEzB,GADAiE,EAAEC,kBACExD,EAAKf,gBAIP,OAHAoE,EAAS,gDACTI,YAAW,kBAAMJ,EAAS,QAAO,UACjCI,YAAW,kBAAMT,EAAQU,KAAK,aAAY,KAG5CpC,ED6CoB,SAAChC,EAAIE,GAAL,OAAc,SAAC8B,EAAUJ,GAC/CyC,IACGC,MADH,iBACmBtE,EADnB,aACkCE,EAAMyB,GAAYC,IACjD2C,MAAK,SAAAC,GACFxC,EAAS,CACP3B,KAAM9B,EACN+B,QAASkE,EAAIC,UAGhBC,OAAM,SAAA3D,GACLiB,EAASP,EAAaV,EAAM4D,SAASF,KAAM1D,EAAM4D,SAAS5E,aCvDrD6E,CAAS5E,KAGd6E,EAAiB,SAACZ,EAAG/D,GAEzB,OADA+D,EAAEC,iBACExD,EAAKf,gBAMNe,EAAKb,KAAK4C,OAASvC,EAAK4D,SACzBC,EAAS,sDACTI,YAAW,kBAAMJ,EAAS,QAAO,OAGnC/B,EDiDuB,SAAC9B,GAE1B,MAAO,CACLG,KAAM5B,EACN6B,QAASJ,GCrDA4E,CAAY5E,SACrBwD,EAAQU,KAAK,aAXXL,EAAS,gDACTI,YAAW,kBAAMJ,EAAS,QAAO,UACjCI,YAAW,kBAAMT,EAAQU,KAAK,aAAY,OAYxCW,EAAmB,SAACd,EAAGjE,GAE3B,OADAiE,EAAEC,iBACExD,EAAKf,gBAMNe,EAAKb,KAAK4C,OAASvC,EAAK4D,SACzBC,EAAS,sDACTI,YAAW,kBAAMJ,EAAS,QAAO,WAGnC/B,EDfsB,SAAChC,GAAD,OAAQ,SAACgC,EAAUJ,GAC3CyC,IACGW,OADH,iBACoBhF,GAAM2B,GAAYC,IACnC2C,MAAK,SAAAC,GAAG,OACPxC,EAAS,CACP3B,KAAM/B,EACNgC,QAASN,OAEZ0E,OAAM,SAAA3D,GACLiB,EAASP,EAAaV,EAAM4D,SAASF,KAAM1D,EAAM4D,SAAS5E,aCMnDkF,CAAWjF,KAVlB+D,EAAS,gDACTI,YAAW,kBAAMJ,EAAS,QAAO,UACjCI,YAAW,kBAAMT,EAAQU,KAAK,aAAY,OAY5C,OACE,gCACGrD,EAAQ,cAACmE,GAAA,EAAD,CAAOnC,MAAM,UAAUP,UAAU,OAAjC,SACRzB,IACU,KACX,eAACoE,GAAA,EAAD,CAAM3C,UAAU,OAAhB,UACE,eAAC4C,GAAA,EAAD,0BAA0BtB,EACxB,6CAAgBuB,KAAOnF,EAAKoF,MAAMC,gBAEpC,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAWC,IAAI,KAAf,yBAAkC9B,KAClC,eAAC+B,GAAA,EAAD,CAAcD,IAAI,KAAKlD,UAAU,kBAAjC,qBAA6DqB,KAC7D,eAAC+B,GAAA,EAAD,+BAA6B9F,QAE/B,cAAC+F,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAatD,UAAU,aAAvB,UACE,cAACuD,GAAA,EAAD,CAAOpD,KAAK,IAAII,MAAM,UAAUH,QAAS,SAACqB,GAAD,OAAOD,EAAeC,EAAG/D,EAAKM,MAAvE,SAA6E,oBAAGgC,UAAU,mBAAb,cAAkCtC,EAAK8F,MAAMC,YAC1H,eAACF,GAAA,EAAD,CAAOpD,KAAK,IAAIC,QAAU,SAACqB,GAAD,OAAOY,EAAeZ,EAAG/D,IAAnD,UAA2D,mBAAGsC,UAAU,gBAAxE,UACA,eAACuD,GAAA,EAAD,CAAOpD,KAAK,IAAII,MAAM,SAASH,QAAS,SAACqB,GAAD,OAAOc,EAAiBd,EAAG/D,EAAKM,MAAxE,UAA8E,mBAAGgC,UAAU,kBAA3F,wBCxER0D,G,kLAMFC,KAAKC,MAAMC,a,+BAGH,IACAhH,EAAU8G,KAAKC,MAAMlG,KAArBb,MACR,OACE,8BACEA,EAAM4G,OACN5G,EAAMkB,KAAK,SAAAL,GAAI,OAAI,cAAC,GAAD,CAA4BA,KAAMA,GAAhBA,EAAKM,QACxC,uB,GAfa8F,aAyBRC,gBAJS,SAAApG,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAG0B,CAAEmG,SFlBlB,kBAAM,SAAArE,GAC5BA,EAASwB,MACTa,IACGmC,IAAI,UACJjC,MAAK,SAAAC,GAAG,OACPxC,EAAS,CACP3B,KAAMlC,EACNmC,QAASkE,EAAIC,UAEhBC,OAAM,SAAA3D,GACLiB,EAASP,EAAaV,EAAM4D,SAASF,KAAM1D,EAAM4D,SAAS5E,eEQjDwG,CAAuCL,I,UClBvCO,GAXI,WACjB,OACE,cAACvD,EAAA,EAAD,UACE,eAACwD,GAAA,EAAD,CAAWlE,UAAU,QAArB,UACE,oBAAIA,UAAU,YAAd,kCACA,mBAAGA,UAAU,OAAb,sHCSOmE,GAXG,WAEhB,OACE,eAACzD,EAAA,EAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,Q,yFCJA0D,G,4MACJzG,MAAQ,CACN0G,OAAO,EACP/G,QAAS,KACTgH,MAAO,GACPC,SAAU,I,EAiBZC,OAAS,WACP,EAAKC,SAAS,CACZJ,OAAQ,EAAK1G,MAAM0G,S,EAGvBK,aAAe,SAAAjD,GACbA,EAAEC,iBADgB,MAEU,EAAK/D,MAC3BN,EAAO,CACXiH,MAJgB,EAEVA,MAGNC,SALgB,EAEHA,UAMf,EAAKX,MAAMe,WAAWtH,I,EAGxBuH,aAAe,SAAAnD,GACb,EAAKgD,SAAL,2BACK,EAAK9G,OADV,mBAEG8D,EAAEoD,OAAO5E,KAAOwB,EAAEoD,OAAOC,U,iEAlCXC,GAAY,IACrBxG,EAAUoF,KAAKC,MAAfrF,MACLA,IAAUwG,EAAUxG,QAEL,eAAbA,EAAMf,IACPmG,KAAKc,SAAS,CACZnH,QAASiB,EAAMjB,QAAQA,UAEzBqG,KAAKa,UAELb,KAAKc,SAAS,CAAEnH,QAAS,U,+BA2BrB,IAAD,OACP,OAAGqG,KAAKC,MAAM1F,KAAKf,gBACV,cAAC,IAAD,CAAU6H,GAAG,MAIpB,gCACE,eAACC,GAAA,EAAD,CAAOrF,OAAQ+D,KAAKhG,MAAM0G,MAAOG,OAAQb,KAAKa,OAAQpE,QAASuD,KAAKa,OAApE,UACE,cAACU,GAAA,EAAD,CAAaV,OAAQb,KAAKa,OAA1B,oBACA,cAACW,GAAA,EAAD,UAAYxB,KAAKhG,MAAML,aAEzB,cAAC8H,GAAA,EAAD,CAAMC,aAAa,MAAMC,SAAU3B,KAAKe,aAAxC,SACE,eAAChE,EAAA,EAAD,CAAWV,UAAU,OAArB,UACE,yCACA,eAACuF,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACC,GAAA,EAAD,CACE7H,KAAK,QACLoC,KAAK,QACLzC,GAAG,QACHmI,YAAY,QACZb,MAAOnB,KAAKhG,MAAM2G,MAClBsB,SAAU,SAACnE,GAAD,OAAO,EAAKmD,aAAanD,SAGvC,eAAC8D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,WAAX,sBACA,cAACC,GAAA,EAAD,CACE7H,KAAK,WACLoC,KAAK,WACLzC,GAAG,WACHmI,YAAY,WACZb,MAAOnB,KAAKhG,MAAM4G,SAClBqB,SAAU,SAACnE,GAAD,OAAO,EAAKmD,aAAanD,SAGvC,cAACoE,GAAA,EAAD,CAAQC,OAAK,EAAb,iC,GAhFShC,aA6FNC,gBALS,SAAApG,GAAK,MAAK,CAEhCO,KAAMP,EAAMO,KACZK,MAAOZ,EAAMY,SAEyB,CAAEoG,WPpChB,SAAC,GAAD,IAAGL,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAAyB,SAAA/E,GAEjD,IAOMuG,EAAOC,KAAKC,UAAU,CAAE3B,QAAOC,aACrC1C,IAAMnE,KAAK,QAASqI,EARL,CACbzG,QAAS,CACP,eAAgB,sBAOjByC,MAAK,SAAAC,GAAG,OAAIxC,EAAS,CACpB3B,KAAMxB,EACNyB,QAASkE,EAAIC,UAEdC,OAAM,SAAA3D,GACLiB,EAASP,EAAaV,EAAM4D,SAASF,KAAM1D,EAAM4D,SAAS5E,OAAQ,eAClEiC,EAAS,CACP3B,KAAMvB,UOkBCyH,CAAyCK,IC7FlD8B,G,4MACJvI,MAAQ,CACN0G,OAAO,EACP/G,QAAS,GACT2C,KAAM,GACNqE,MAAO,GACPC,SAAU,I,EAiBZC,OAAS,WACP,EAAKC,SAAS,CACZJ,OAAQ,EAAK1G,MAAM0G,S,EAGvBK,aAAe,SAAAjD,GACbA,EAAEC,iBADgB,MAEgB,EAAK/D,MACjCwI,EAAU,CACdlG,KAJgB,EAEVA,KAGNqE,MALgB,EAEJA,MAIZC,SANgB,EAEGA,UAMrB,EAAKX,MAAMwC,WAAWD,I,EAGxBvB,aAAe,SAAAnD,GACb,EAAKgD,SAAL,2BACK,EAAK9G,OADV,mBAEG8D,EAAEoD,OAAO5E,KAAOwB,EAAEoD,OAAOC,U,iEAlCXC,GAAY,IACrBxG,EAAUoF,KAAKC,MAAfrF,MACLA,IAAUwG,EAAUxG,QAEL,gBAAbA,EAAMf,IACPmG,KAAKc,SAAS,CACZnH,QAASiB,EAAMjB,QAAQA,UAEzBqG,KAAKa,UAELb,KAAKc,SAAS,CAAEnH,QAAS,U,+BA2BrB,IAAD,OACP,OAAGqG,KAAKC,MAAMzG,gBACL,cAAC,IAAD,CAAU6H,GAAG,MAGpB,gCACA,eAACC,GAAA,EAAD,CAAOrF,OAAQ+D,KAAKhG,MAAM0G,MAAOG,OAAQb,KAAKa,OAAQpE,QAASuD,KAAKa,OAApE,UACE,cAACU,GAAA,EAAD,CAAaV,OAAQb,KAAKa,OAA1B,oBACA,cAACW,GAAA,EAAD,UAAYxB,KAAKhG,MAAML,aAEzB,cAAC8H,GAAA,EAAD,CAAMC,aAAa,MAAMC,SAAU3B,KAAKe,aAAxC,SACE,eAAChE,EAAA,EAAD,CAAWV,UAAU,OAArB,UACE,yCACA,eAACuF,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,OAAX,kBACA,cAACC,GAAA,EAAD,CACE7H,KAAK,OACLoC,KAAK,OACLzC,GAAG,OACHmI,YAAY,OACZb,MAAOnB,KAAKhG,MAAMsC,KAClB2F,SAAU,SAACnE,GAAD,OAAO,EAAKmD,aAAanD,SAGvC,eAAC8D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACC,GAAA,EAAD,CACE7H,KAAK,QACLoC,KAAK,QACLzC,GAAG,QACHmI,YAAY,QACZb,MAAOnB,KAAKhG,MAAM2G,MAClBsB,SAAU,SAACnE,GAAD,OAAO,EAAKmD,aAAanD,SAGvC,eAAC8D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,WAAX,sBACA,cAACC,GAAA,EAAD,CACE7H,KAAK,WACLoC,KAAK,WACLzC,GAAG,WACHmI,YAAY,WACZb,MAAOnB,KAAKhG,MAAM4G,SAClBqB,SAAU,SAACnE,GAAD,OAAO,EAAKmD,aAAanD,SAGvC,cAACoE,GAAA,EAAD,CAAQC,OAAK,EAAb,iC,GA3FWhC,aAwGNC,gBALS,SAAApG,GAAK,MAAK,CAChCR,gBAAiBQ,EAAMO,KAAKf,gBAC5BoB,MAAOZ,EAAMY,SAGyB,CAAE6H,WR1EhB,SAAC,GAAD,IAAGnG,EAAH,EAAGA,KAAMqE,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,OAA+B,SAAA/E,GAEvD,IAOMuG,EAAOC,KAAKC,UAAU,CAAEhG,OAAMqE,QAAOC,aAC3C1C,IAAMnE,KAAK,SAAUqI,EARN,CACbzG,QAAS,CACP,eAAgB,sBAOjByC,MAAK,SAAAC,GACJxC,EAASN,KACTM,EAAS,CACP3B,KAAMrB,EACNsB,QAASkE,EAAIC,UAGhBC,OAAM,SAAA3D,GACLiB,EAASP,EAAaV,EAAM4D,SAASF,KAAM1D,EAAM4D,SAAS5E,OAAQ,gBAClEiC,EAAS,CACP3B,KAAMpB,UQqDCsH,CAAyCmC,ICzGlDG,G,4MACJ1I,MAAQ,CACN0G,OAAO,EACP9F,MAAO,KACP6C,MAAO,GACPC,OAAQ,GACRhE,KAAM,KACNC,QAAS,I,EAqBXkH,OAAS,kBAAM,EAAKC,SAAS,CAAEJ,OAAQ,EAAK1G,MAAM0G,S,EAClDK,aAAe,SAACjD,GACdA,EAAEC,iBADkB,MAEgB,EAAK/D,MACnC2I,EAAU,CACdlF,MAJkB,EAEZA,MAGNC,OALkB,EAELA,OAIb/D,QANkB,EAEGA,QAKrBgE,QAAS,EAAKsC,MAAM1F,KAAKb,KAAK4C,KAC9B5C,KAAM,EAAKuG,MAAM1F,KAAKb,MAIxB,EAAKuG,MAAM2C,WAAWD,I,EAExB1B,aAAe,SAACnD,GACd,EAAKgD,SAAL,2BACK,EAAK9G,OADV,mBAEG8D,EAAEoD,OAAO5E,KAAOwB,EAAEoD,OAAOC,U,iEArCbC,GAAY,IAAD,EACCpB,KAAKC,MAAxBrF,EADkB,EAClBA,MAAOxB,EADW,EACXA,QAEZA,IAAYgI,EAAUhI,UACnBA,GAAS4G,KAAKC,MAAM1C,QAAQU,KAAK,MAEpCrD,IAAUwG,EAAUxG,QAEL,qBAAbA,EAAMf,IACPmG,KAAKc,SAAS,CACZlG,MAAOA,EAAMjB,QAAQA,UAEvBqG,KAAKa,UAELb,KAAKc,SAAS,CAAElG,MAAO,U,+BA0BnB,IAAD,OACP,OACA,gCACE,eAAC0G,GAAA,EAAD,CAAOrF,OAAQ+D,KAAKhG,MAAM0G,MAAOG,OAAQb,KAAKa,OAAQpE,QAASuD,KAAKa,OAApE,UACE,cAACU,GAAA,EAAD,CAAaV,OAAQb,KAAKa,OAA1B,oBACA,cAACW,GAAA,EAAD,UAAYxB,KAAKhG,MAAMY,WAEzB,cAAC6G,GAAA,EAAD,CAAMC,aAAa,MAAMC,SAAU3B,KAAKe,aAAxC,SACE,eAAChE,EAAA,EAAD,WACE,0CACA,eAAC6E,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACC,GAAA,EAAD,CAAO7H,KAAK,OAAOoC,KAAK,QAAQzC,GAAG,QAAQmI,YAAY,aACrDb,MAAOnB,KAAKhG,MAAMyD,MAClBwE,SAAU,SAACnE,GAAD,OAAO,EAAKmD,aAAanD,SAGvC,eAAC8D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,oBACA,cAACC,GAAA,EAAD,CAAO7H,KAAK,OAAOoC,KAAK,SAASzC,GAAG,SAASmI,YAAY,SACvDb,MAAOnB,KAAKhG,MAAM0D,OAClBuE,SAAU,SAACnE,GAAD,OAAO,EAAKmD,aAAanD,SAGvC,eAAC8D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,UAAX,6BACA,cAACC,GAAA,EAAD,CAAO7H,KAAK,WAAWoC,KAAK,UAAUzC,GAAG,UACvCsH,MAAOnB,KAAKhG,MAAML,QAClBsI,SAAU,SAACnE,GAAD,OAAO,EAAKmD,aAAanD,SAGvC,cAACoE,GAAA,EAAD,CAAQhI,KAAK,SAASiI,OAAK,EAA3B,kC,GAhFehC,aA6FVC,gBALS,SAAApG,GAAK,MAAK,CAChCZ,QAASY,EAAMD,KAAKX,QACpBmB,KAAMP,EAAMO,KACZK,MAAOZ,EAAMY,SAEyB,CAAEgI,WPvEhB,SAAC7I,GAAD,OAAU,SAAC8B,EAAUJ,GAC7CI,EAASwB,MACTa,IACGnE,KAAK,SAAUA,EAAMyB,GAAYC,IACjC2C,MAAK,SAAAC,GAAG,OACPxC,EAAS,CACP3B,KAAMjC,EACNkC,QAASkE,EAAIC,UAEhBC,OAAM,SAAA3D,GACLiB,EAASP,EAAaV,EAAM4D,SAASF,KAAM1D,EAAM4D,SAAS5E,OAAQ,2BO6DzDwG,CAAyCsC,ICvCzCG,GArDI,WACjB,IAAOC,EAAW/G,aAAY,SAAA/B,GAAK,OAAIA,EAAMD,KAAKZ,cAE1CsE,EAAgCqF,EAAhCrF,MAAOC,EAAyBoF,EAAzBpF,OAAQ/D,EAAiBmJ,EAAjBnJ,QAASU,EAAQyI,EAARzI,IAHT,EAIO2B,mBAAS,CACrCyB,QACAC,SACA/D,UACAU,QARqB,mBAIhBsI,EAJgB,KAIPI,EAJO,KAWjBlH,EAAWC,cACbyB,EAAUC,cAQd,OACE,cAACiE,GAAA,EAAD,CAAMC,aAAa,MAAMC,SAPN,SAAC7D,GRiCE,IAACjE,EAAIE,EQhC3B+D,EAAEC,iBACFlC,GR+BuBhC,EQ/BH8I,EAAQtI,IR+BDN,EQ/BM4I,ER+BG,SAAC9G,EAAUJ,GACjDyC,IACCC,MADD,iBACiBtE,GAAME,EAAMyB,GAAYC,IACxC2C,MAAK,SAAAC,GAEFxC,EAAS,CACP3B,KAAMhC,EACNiC,QAASkE,EAAIC,UAGhBC,OAAM,SAAA3D,GACLiB,EAASP,EAAaV,EAAM4D,SAASF,KAAM1D,EAAM4D,SAAS5E,eQzC5D2D,EAAQU,KAAK,MAIb,SACE,eAAClB,EAAA,EAAD,WACE,6CACA,2CAAc4F,EAAQtI,OACtB,eAACuH,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACC,GAAA,EAAD,CAAO7H,KAAK,OAAOoC,KAAK,QAAQzC,GAAG,QAAQmI,YAAY,aACrDb,MAAOwB,EAAQlF,MACfwE,SAAU,SAACnE,GAAD,OAAOiF,EAAW,2BAAKJ,GAAN,IAAelF,MAAOK,EAAEoD,OAAOC,eAG9D,eAACS,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,oBACA,cAACC,GAAA,EAAD,CAAO7H,KAAK,OAAOoC,KAAK,SAASzC,GAAG,SAASmI,YAAY,SACvDb,MAAOwB,EAAQjF,OACfuE,SAAU,SAACnE,GAAD,OAAOiF,EAAW,2BAAKJ,GAAN,IAAejF,OAAQI,EAAEoD,OAAOC,eAG/D,eAACS,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAOC,IAAI,UAAX,6BACA,cAACC,GAAA,EAAD,CAAO7H,KAAK,WAAWoC,KAAK,OAAOzC,GAAG,UACpCsH,MAAOwB,EAAQhJ,QACfsI,SAAU,SAACnE,GAAD,OAAOiF,EAAW,2BAAKJ,GAAN,IAAehJ,QAASmE,EAAEoD,OAAOC,eAGhE,cAACe,GAAA,EAAD,CAAQhI,KAAK,SAASiI,OAAK,EAA3B,+BCdOa,G,kLAvBXjI,EAAMc,UXDoB,SAACA,EAAUJ,GAEvCI,EAAS,CAAE3B,KAAM3B,IAGjB2F,IAAMmC,IAAI,aAAc7E,GAAYC,IACjC2C,MAAK,SAAAC,GACJxC,EAASN,KACTM,EAAS,CACP3B,KAAM1B,EACN2B,QAASkE,EAAIC,UAGhBC,OAAM,SAAA3D,GACLiB,EAASP,EAAaV,EAAM4D,SAASF,KAAM1D,EAAM4D,SAAS5E,SAC1DiC,EAAS,CACT3B,KAAMzB,Y,+BWXR,OACE,cAAC,IAAD,CAAUsC,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,sBAAKsB,UAAU,MAAf,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,IAAKC,UAAW3C,KAClC,cAAC,IAAD,CAAO0C,KAAK,UAAWC,UAAW1C,KAClC,cAAC,IAAD,CAAOyC,KAAK,UAAWC,UAAWZ,KAClC,cAAC,IAAD,CAAOW,KAAK,UAAWC,UAAWT,KAClC,cAAC,IAAD,CAAOQ,KAAK,UAAWC,UAAWN,mB,GAhB9B1C,aCDHiD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlF,MAAK,YAAkD,IAA/CmF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SAKjDX,O","file":"static/js/main.12a03622.chunk.js","sourcesContent":["export const FETCH_ALL = 'FETCH_ALL';\r\nexport const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const LIKE = 'LIKE';\r\nexport const POSTS_LOADING = 'POSTS_LOADING';\r\nexport const MOUNT_UPDATE = 'MOUNT_UPDATE';\r\n// user types:\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n// error types:\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n// export const AUTHENTICATION_ERROR = 'No token, authorization denied' || 'Token is not valid';","import { \r\n  DELETE_POST, \r\n  FETCH_ALL, \r\n  CREATE, \r\n  UPDATE, \r\n  LIKE, \r\n  POSTS_LOADING,\r\n  MOUNT_UPDATE\r\n} from \"../actions/types\";\r\n\r\nconst initState = {\r\n  posts: [],\r\n  toBeEdited: null,\r\n  loading: false\r\n}\r\n\r\nexport const postReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loading: false\r\n      }\r\n    case CREATE:\r\n      return{\r\n        ...state,\r\n        posts: [...state.posts, action.payload],\r\n        loading: false\r\n      }\r\n    case LIKE:\r\n    case UPDATE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post),\r\n        toBeEdited: null\r\n      }\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts : state.posts.filter(post => post._id !== action.payload)\r\n      }\r\n    case POSTS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n      case MOUNT_UPDATE:\r\n        // console.log(action.payload);\r\n        return {\r\n          ...state,\r\n          toBeEdited: action.payload\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { \r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  SIGNUP_SUCCESS\r\n} from '../actions/types';\r\n\r\nconst initState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  user: null\r\n};\r\n\r\nexport const authReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case SIGNUP_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n    case LOGIN_FAIL:\r\n    case SIGNUP_FAIL:\r\n    case AUTH_ERROR:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initState = {\r\n  message: {},\r\n  status: null,\r\n  id: null\r\n};\r\n\r\nexport const errorReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        message: action.payload.message,\r\n        status: action.payload.status,\r\n        id: action.payload.id\r\n      }\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        message: {},\r\n        status: null,\r\n        id: null\r\n      }      \r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { postReducer } from './postReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { errorReducer } from './errorReducer';\r\n\r\nexport default combineReducers({\r\n  post: postReducer,\r\n  auth: authReducer,\r\n  error: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initState, compose(\r\n  applyMiddleware(...middleware),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import { GET_ERRORS, CLEAR_ERRORS } from './types';\r\n// import { authError } from './authActions';\r\n\r\n// return errors\r\nexport const returnErrors = (message, status, id = null) => {\r\n  // if(message === AUTHENTICATION_ERROR) {\r\n  //   authError();\r\n  // } else {\r\n    return {\r\n      type: GET_ERRORS,\r\n      payload: { message, status, id }\r\n    };\r\n  // }\r\n}\r\n\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS\r\n  };\r\n}","import axios from 'axios';\r\nimport { \r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  SIGNUP_SUCCESS\r\n} from './types';\r\nimport { returnErrors, clearErrors } from './errorActions';\r\n\r\n// check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  // user loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  // get token\r\n  axios.get('/auth/user', tokenConfig(getState))\r\n    .then(res => {\r\n      dispatch(clearErrors());\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      });\r\n  })\r\n    .catch(error => {\r\n      dispatch(returnErrors(error.response.data, error.response.status));\r\n      dispatch({\r\n      type: AUTH_ERROR\r\n      });\r\n    });\r\n}\r\n\r\n// sign up user\r\nexport const signUpUser = ({ name, email, password }) => dispatch => { \r\n  // headers\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    }\r\n  }\r\n\r\n  // request body\r\n  const body = JSON.stringify({ name, email, password });\r\n  axios.post('/users', body, config)\r\n    .then(res => {\r\n      dispatch(clearErrors());\r\n      dispatch({\r\n        type: SIGNUP_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(error => {\r\n      dispatch(returnErrors(error.response.data, error.response.status, 'SIGNUP_FAIL'));\r\n      dispatch({\r\n        type: SIGNUP_FAIL\r\n      })\r\n    })\r\n}\r\n\r\n// login user\r\nexport const signInUser = ({ email, password }) => dispatch => { \r\n  // headers\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    }\r\n  }\r\n\r\n  // request body\r\n  const body = JSON.stringify({ email, password });\r\n  axios.post('/auth', body, config)\r\n    .then(res => dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    }))\r\n    .catch(error => {\r\n      dispatch(returnErrors(error.response.data, error.response.status, 'LOGIN_FAIL'));\r\n      dispatch({\r\n        type: LOGIN_FAIL\r\n      })\r\n    })\r\n}\r\n\r\n  // logout user\r\nexport const logoutUser = () => {\r\n  console.log('user logged out');\r\n  return {\r\n    type: LOGOUT_SUCCESS\r\n  }\r\n}\r\n\r\n// setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n  // get the token from local storage\r\n  const token = getState().auth.token;\r\n  // headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  }\r\n  // if token, add headers\r\n  if(token) {\r\n    config.headers['x-auth-token'] = token;\r\n  }\r\n  return config;\r\n}","import { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container\r\n} from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUser } from '../../actions/authActions';\r\n\r\nconst AppNavbar = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  // const [user, setUser] = useState(auth.user);\r\n  // useEffect(() => {\r\n  //   if(!user) {\r\n  //     console.log('invalid user');\r\n  //     dispatch(logoutUser());\r\n  //   }\r\n  // }, [user, dispatch])\r\n\r\n  const logout = () => {\r\n    dispatch(logoutUser());\r\n  }\r\n \r\n  const authLinks = (\r\n    <>\r\n      <NavItem>\r\n        <span className=\"navbar-text mr-3\">\r\n          <strong>{ auth.user ? `Welcome ${auth.user.name}` : ''}</strong>\r\n        </span>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href='/' onClick={logout}>Logout</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href=\"/create\">New Post</NavLink>\r\n      </NavItem>\r\n    </>\r\n  );\r\n  const guestLinks = (\r\n    <>\r\n      <NavItem>\r\n        <NavLink href=\"/signup\">Sign Up</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink href=\"/signin\">Sign In</NavLink>\r\n      </NavItem>\r\n    </>\r\n  );    \r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"sm\">\r\n          <Container>\r\n            <NavbarBrand href=\"/\">BookBlog</NavbarBrand>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                { auth.isAuthenticated ? authLinks : guestLinks }\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>      \r\n    );\r\n  \r\n}\r\n\r\n\r\nexport default AppNavbar;","import axios from 'axios';\r\nimport { \r\n  DELETE_POST, \r\n  FETCH_ALL, \r\n  CREATE, \r\n  UPDATE, \r\n  LIKE, \r\n  MOUNT_UPDATE,\r\n  POSTS_LOADING\r\n} from \"./types\";\r\nimport { returnErrors } from './errorActions';\r\nimport { tokenConfig } from './authActions';\r\n\r\nexport const getPosts = () => dispatch => {\r\n  dispatch(setPostsLoading());\r\n  axios\r\n    .get('/posts')\r\n    .then(res => \r\n      dispatch({\r\n        type: FETCH_ALL,\r\n        payload: res.data\r\n      }))\r\n    .catch(error => {\r\n      dispatch(returnErrors(error.response.data, error.response.status))\r\n    });\r\n}\r\n\r\nexport const createPost = (post) => (dispatch, getState) => {\r\n  dispatch(setPostsLoading());\r\n  axios\r\n    .post('/posts', post, tokenConfig(getState))\r\n    .then(res => \r\n      dispatch({\r\n        type: CREATE,\r\n        payload: res.data\r\n      }))\r\n    .catch(error => {\r\n      dispatch(returnErrors(error.response.data, error.response.status, 'CREATE_POST_FAIL'));\r\n    })\r\n}\r\n\r\nexport const deletePost = (id) => (dispatch, getState) => {\r\n  axios\r\n    .delete(`/posts/${id}`, tokenConfig(getState))\r\n    .then(res => \r\n      dispatch({\r\n        type: DELETE_POST,\r\n        payload: id\r\n      }))\r\n    .catch(error => {\r\n      dispatch(returnErrors(error.response.data, error.response.status))\r\n    });\r\n}\r\nexport const updatePost = (id, post) => (dispatch, getState) => {\r\n  axios\r\n  .patch(`/posts/${id}`, post, tokenConfig(getState))\r\n  .then(res => {\r\n      // console.log(res.data);\r\n      dispatch({\r\n        type: UPDATE,\r\n        payload: res.data\r\n      })\r\n    })\r\n    .catch(error => {\r\n      dispatch(returnErrors(error.response.data, error.response.status))\r\n    });\r\n}\r\n\r\nexport const likePost = (id, post) => (dispatch, getState) => {\r\n  axios\r\n    .patch(`/posts/${id}/likepost`, post, tokenConfig(getState))\r\n    .then(res => {\r\n        dispatch({\r\n          type: LIKE,\r\n          payload: res.data\r\n        })\r\n      })\r\n      .catch(error => {\r\n        dispatch(returnErrors(error.response.data, error.response.status))\r\n      });  \r\n}\r\n\r\nexport const setPostsLoading = () => {\r\n  return {\r\n    type: POSTS_LOADING\r\n  }\r\n}\r\n\r\nexport const mountUpdate = (post) => {\r\n  // console.log(post);\r\n  return {\r\n    type: MOUNT_UPDATE,\r\n    payload: post\r\n  }\r\n}","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, CardHeader, CardFooter, CardBody,\r\n  CardTitle, CardSubtitle, CardText, ButtonGroup, Alert, Badge } from 'reactstrap';\r\nimport { likePost, deletePost, mountUpdate } from '../../actions/postActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst PostDetails = ({post}) => {\r\n  const auth = useSelector( state => state.auth);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { title, author, message, creator } = post;\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleLikePost = (e, id) => {\r\n    e.preventDefault();\r\n    if(!auth.isAuthenticated) {\r\n      setError('Please sign in to get the most of this site!');\r\n      setTimeout(() => setError(null), 3000);\r\n      setTimeout(() => history.push('/signin'), 3000);\r\n      return;\r\n    }\r\n    dispatch(likePost(id));\r\n  }\r\n\r\n  const handleEditPost = (e, post) => {\r\n    e.preventDefault();\r\n    if(!auth.isAuthenticated) {\r\n      setError('Please sign in to get the most of this site!');\r\n      setTimeout(() => setError(null), 3000);\r\n      setTimeout(() => history.push('/signin'), 3000);\r\n      return;\r\n    }\r\n    if(auth.user.name !== post.creator) {\r\n      setError('You can modify only the posts created by you!');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n    dispatch(mountUpdate(post));\r\n    history.push('/update') \r\n  }\r\n\r\n  const handleDeletePost = (e, id) => {\r\n    e.preventDefault();\r\n    if(!auth.isAuthenticated) {\r\n      setError('Please sign in to get the most of this site!');\r\n      setTimeout(() => setError(null), 3000);\r\n      setTimeout(() => history.push('/signin'), 3000);\r\n      return;\r\n    }\r\n    if(auth.user.name !== post.creator) {\r\n      setError('You can remove only the posts created by you!');\r\n      setTimeout(() => setError(null), 3000);\r\n      return;\r\n    }\r\n    dispatch(deletePost(id));\r\n  }\r\n\r\n\r\n    return (\r\n      <div>\r\n        {error ? <Alert color=\"primary\" className=\"mt-3\">\r\n        {error}\r\n        </Alert> : null }\r\n        <Card className=\"mb-3\">\r\n          <CardHeader>Created by: { creator }\r\n            <p>Created at: {moment(post.date).fromNow()}</p> \r\n          </CardHeader>\r\n          <CardBody>\r\n            <CardTitle tag=\"h5\">Book Title: { title }</CardTitle>\r\n            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Author: { author }</CardSubtitle>\r\n            <CardText>About this book: { message }</CardText>\r\n          </CardBody>\r\n          <CardFooter>\r\n            <ButtonGroup className=\"pull-right\">\r\n              <Badge href=\"#\" color=\"primary\" onClick={(e) => handleLikePost(e, post._id)}><i className=\"fas fa-thumbs-up\"> {post.likes.length}</i></Badge>\r\n              <Badge href=\"#\" onClick={ (e) => handleEditPost(e, post) }><i className=\"fas fa-edit\"></i>edit</Badge>\r\n              <Badge href=\"#\" color=\"danger\" onClick={(e) => handleDeletePost(e, post._id)}><i className=\"fas fa-delete\"></i>Delete</Badge>\r\n              \r\n            </ButtonGroup>\r\n          </CardFooter>                \r\n        </Card>\r\n      </div>\r\n    )\r\n  \r\n}\r\n \r\n\r\nexport default PostDetails;","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../actions/postActions';\r\nimport PostDetails from './PostDetails';\r\n// import PropTypes from 'prop-types';\r\n\r\nclass PostList extends Component {\r\n  // static propTypes = {\r\n  //   post: PropTypes.object.isRequired,\r\n  //   getPosts: PropTypes.func.isRequired,\r\n  // }\r\n  componentDidMount() {\r\n    this.props.getPosts();\r\n  }\r\n\r\n  render() { \r\n    const { posts } = this.props.post;\r\n    return (\r\n      <div>\r\n      { posts.length ? (\r\n        posts.map( post => <PostDetails key={post._id} post={post} />)\r\n      ) : 'No post yet...' }\r\n    </div> \r\n    );\r\n  }\r\n}\r\n\r\nconst mapstateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapstateToProps, { getPosts })(PostList);","import { Jumbotron, Container } from 'reactstrap';\r\n\r\nconst JumbotronC = () => {\r\n  return (\r\n    <Container>\r\n      <Jumbotron className=\"jtron\">\r\n        <h1 className=\"display-3\">Welcome to BookBlog!</h1>\r\n        <p className=\"lead\">This is a place for exchanging information on books. Share your experience from books with others!</p>\r\n      </Jumbotron>\r\n    </Container>\r\n  );\r\n}\r\n \r\nexport default JumbotronC;","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport PostList from '../posts/PostList';\r\nimport JumbotronC from './Jumbotron';\r\n\r\nconst Dashboard = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <JumbotronC />\r\n      <PostList />\r\n    </Container>    \r\n  );\r\n\r\n}\r\n \r\nexport default Dashboard;","import { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { signInUser } from '../../actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = { \r\n    modal: false,\r\n    message: null,\r\n    email: '',\r\n    password: ''\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const { error } = this.props;\r\n    if(error !== prevProps.error) {\r\n      // check for signup error\r\n      if(error.id === 'LOGIN_FAIL') {\r\n        this.setState({\r\n          message: error.message.message\r\n        })\r\n        this.toggle();\r\n      } else {\r\n        this.setState({ message: null });\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault(); \r\n    const { email, password } = this.state;\r\n    const user = {\r\n      email,\r\n      password\r\n    };\r\n    // attempt to login\r\n    this.props.signInUser(user);\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ \r\n      ...this.state, \r\n      [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() { \r\n    if(this.props.auth.isAuthenticated) {\r\n      return <Redirect to='/' />\r\n    }    \r\n    \r\n    return (\r\n      <div>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} onClick={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Error:</ModalHeader>\r\n          <ModalBody>{this.state.message}</ModalBody>\r\n        </Modal>      \r\n        <Form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n          <Container className=\"mt-3\">\r\n            <h4>Sign In</h4>\r\n            <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input \r\n                type=\"email\" \r\n                name=\"email\" \r\n                id=\"email\" \r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.handleChange(e) }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <Input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                id=\"password\" \r\n                placeholder=\"Password\" \r\n                value={this.state.password}\r\n                onChange={(e) => this.handleChange(e) }\r\n              />\r\n            </FormGroup>\r\n            <Button block>Sign In</Button> \r\n          </Container>\r\n        </Form>  \r\n      </div>   \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n  error: state.error\r\n});\r\nexport default connect(mapStateToProps, { signInUser })(SignIn);","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { signUpUser } from '../../actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    modal: false,\r\n    message: '',\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    const { error } = this.props;\r\n    if(error !== prevProps.error) {\r\n      // check for signup error\r\n      if(error.id === 'SIGNUP_FAIL') {\r\n        this.setState({\r\n          message: error.message.message\r\n        })\r\n        this.toggle();\r\n      } else {\r\n        this.setState({ message: null });\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    })\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault(); \r\n    const { name, email, password } = this.state;\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password\r\n    };\r\n    this.props.signUpUser(newUser);\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ \r\n      ...this.state, \r\n      [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() { \r\n    if(this.props.isAuthenticated) {\r\n      return <Redirect to='/' />\r\n    }\r\n    return (\r\n      <div>\r\n      <Modal isOpen={this.state.modal} toggle={this.toggle} onClick={this.toggle}>\r\n        <ModalHeader toggle={this.toggle}>Error:</ModalHeader>\r\n        <ModalBody>{this.state.message}</ModalBody>\r\n      </Modal>\r\n      <Form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n        <Container className=\"mt-3\">\r\n          <h4>Sign Up</h4>\r\n          <FormGroup>\r\n            <Label for=\"name\">Name</Label>\r\n            <Input \r\n              type=\"text\" \r\n              name=\"name\" \r\n              id=\"name\" \r\n              placeholder=\"Name\"\r\n              value={this.state.name}\r\n              onChange={(e) => this.handleChange(e) }\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input \r\n              type=\"email\" \r\n              name=\"email\" \r\n              id=\"email\" \r\n              placeholder=\"Email\"\r\n              value={this.state.email}\r\n              onChange={(e) => this.handleChange(e) }\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input \r\n              type=\"password\" \r\n              name=\"password\" \r\n              id=\"password\" \r\n              placeholder=\"Password\" \r\n              value={this.state.password}\r\n              onChange={(e) => this.handleChange(e) }\r\n            />\r\n          </FormGroup>\r\n          <Button block>Sign Up</Button> \r\n        </Container>\r\n      </Form> \r\n      </div>     \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n})\r\n\r\nexport default connect(mapStateToProps, { signUpUser })(SignUp);","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { createPost } from '../../actions/postActions';\r\n\r\nclass CreatePost extends Component {\r\n  state = {\r\n    modal: false,\r\n    error: null,\r\n    title: '',\r\n    author: '',\r\n    user: null,\r\n    message: '',\r\n  }\r\ncomponentDidUpdate(prevProps) {\r\n    const { error, loading } = this.props;\r\n    // check if post is created successfully\r\n    if(loading !== prevProps.loading) {\r\n      if(!loading) this.props.history.push('/');\r\n    }\r\n    if(error !== prevProps.error) {\r\n      // check for signup error\r\n      if(error.id === 'CREATE_POST_FAIL') {\r\n        this.setState({\r\n          error: error.message.message\r\n        })\r\n        this.toggle();\r\n      } else {\r\n        this.setState({ error: null });\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => this.setState({ modal: !this.state.modal });\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { title, author, message }  = this.state;\r\n    const newPost = {\r\n      title,\r\n      author,\r\n      message,\r\n      creator: this.props.auth.user.name,\r\n      user: this.props.auth.user\r\n      //\r\n    }\r\n    // console.log(newPost);\r\n    this.props.createPost(newPost);\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  render() { \r\n    return (\r\n    <div>\r\n      <Modal isOpen={this.state.modal} toggle={this.toggle} onClick={this.toggle}>\r\n        <ModalHeader toggle={this.toggle}>Error:</ModalHeader>\r\n        <ModalBody>{this.state.error}</ModalBody>\r\n      </Modal>\r\n      <Form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n        <Container>\r\n          <h4>New Post</h4>\r\n          <FormGroup>\r\n            <Label for=\"title\">Title</Label>\r\n            <Input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Book Title\" \r\n              value={this.state.title}\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"author\">Author</Label>\r\n            <Input type=\"text\" name=\"author\" id=\"author\" placeholder=\"Author\"\r\n              value={this.state.author}\r\n              onChange={(e) => this.handleChange(e)}\r\n            />          \r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"message\">About this book</Label>\r\n            <Input type=\"textarea\" name=\"message\" id=\"message\" \r\n              value={this.state.message}\r\n              onChange={(e) => this.handleChange(e)}\r\n            />          \r\n          </FormGroup>        \r\n          <Button type=\"submit\" block>Add Post</Button> \r\n        </Container>\r\n      </Form>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.post.loading,\r\n  auth: state.auth,\r\n  error: state.error\r\n});\r\nexport default connect(mapStateToProps, { createPost })(CreatePost);","import React, { useState } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updatePost } from '../../actions/postActions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst UpdatePost = () => {\r\n  const  oldPost  = useSelector(state => state.post.toBeEdited);\r\n  // console.log(oldPost);\r\n  const { title, author, message, _id } = oldPost;\r\n  const [newPost, setNewPost] = useState({\r\n    title,\r\n    author,\r\n    message,\r\n    _id\r\n  });\r\n  \r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n   \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updatePost(newPost._id, newPost));\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n      <Container>\r\n        <h4>Update Post</h4>\r\n        <h5>Post ID: {newPost._id}</h5>\r\n        <FormGroup>\r\n          <Label for=\"title\">Title</Label>\r\n          <Input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Book Title\" \r\n            value={newPost.title}\r\n            onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"author\">Author</Label>\r\n          <Input type=\"text\" name=\"author\" id=\"author\" placeholder=\"Author\"\r\n            value={newPost.author}\r\n            onChange={(e) => setNewPost({ ...newPost, author: e.target.value })}\r\n          />          \r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"message\">About this book</Label>\r\n          <Input type=\"textarea\" name=\"text\" id=\"message\" \r\n            value={newPost.message}\r\n            onChange={(e) => setNewPost({ ...newPost, message: e.target.value })}\r\n          />          \r\n        </FormGroup>        \r\n        <Button type=\"submit\" block>Update Post</Button> \r\n      </Container>\r\n    </Form>\r\n    );\r\n  \r\n}\r\n \r\nexport default UpdatePost;","import { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport AppNavbar from './components/navbar/AppNavbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreatePost from './components/posts/CreatePost';\nimport UpdatePost from './components/posts/UpdatePost';\nimport { loadUser } from './actions/authActions';\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n  \n  render() { \n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <AppNavbar />\n            <Switch>\n              <Route exact path=\"/\"  component={Dashboard} />\n              <Route path=\"/signin\"  component={SignIn} />\n              <Route path=\"/signup\"  component={SignUp} />\n              <Route path=\"/create\"  component={CreatePost} />\n              <Route path=\"/update\"  component={UpdatePost} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}